<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>宝塔面板搭建FastDFS图片服务器</title>
      <link href="/2021/12/04/bao-ta-mian-ban-da-jian-fastdfs/"/>
      <url>/2021/12/04/bao-ta-mian-ban-da-jian-fastdfs/</url>
      
        <content type="html"><![CDATA[<h1 id="宝塔面板搭建FastDFS图片服务器"><a href="#宝塔面板搭建FastDFS图片服务器" class="headerlink" title="宝塔面板搭建FastDFS图片服务器"></a>宝塔面板搭建FastDFS图片服务器</h1><h1 id="一、先给服务器装上宝塔面板"><a href="#一、先给服务器装上宝塔面板" class="headerlink" title="一、先给服务器装上宝塔面板"></a>一、先给服务器装上宝塔面板</h1><h2 id="1-1、宝塔官网复制安装命令"><a href="#1-1、宝塔官网复制安装命令" class="headerlink" title="1.1、宝塔官网复制安装命令"></a>1.1、宝塔官网复制安装命令</h2><p><a href="https://www.bt.cn/bbs/thread-19376-1-1.html">宝塔–Linux面板安装地址</a></p><p>使用远程连接工具连接上自己的服务器-在终端输入以下安装命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> -y <span class="token function">wget</span> <span class="token operator">&amp;&amp;</span> <span class="token function">wget</span> -O install.sh http://download.bt.cn/install/install_6.0.sh <span class="token operator">&amp;&amp;</span> <span class="token function">sh</span> install.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-1.1%E3%80%81%E5%AE%89%E8%A3%85%E5%AE%9D%E5%A1%94.png"></p><p>至此宝塔面板安装成功，注意开放端口8888，否则无法访问宝塔面板</p><h1 id="二、进入宝塔面板安装推荐软件并修改一些宝塔面板的相关配置"><a href="#二、进入宝塔面板安装推荐软件并修改一些宝塔面板的相关配置" class="headerlink" title="二、进入宝塔面板安装推荐软件并修改一些宝塔面板的相关配置"></a>二、进入宝塔面板安装推荐软件并修改一些宝塔面板的相关配置</h1><h2 id="2-1、安装推荐软件"><a href="#2-1、安装推荐软件" class="headerlink" title="2.1、安装推荐软件"></a>2.1、安装推荐软件</h2><p>推荐安装LNMP，使用编译安装的方式进行安装，如果不想等，就使用快速安装方式。</p><h1 id="三、搭建FastDFS图片服务器"><a href="#三、搭建FastDFS图片服务器" class="headerlink" title="三、搭建FastDFS图片服务器"></a>三、搭建FastDFS图片服务器</h1><h2 id="3-1、第一步-上传-上传软件安装包"><a href="#3-1、第一步-上传-上传软件安装包" class="headerlink" title="3.1、第一步-上传-上传软件安装包"></a>3.1、第一步-上传-上传软件安装包</h2><p>可以使用宝塔面板自带的上传文件图形化界面进行上传软件安装包</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS--%E4%BD%BF%E7%94%A8%E5%AE%9D%E5%A1%94%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6.png"></p><h2 id="3-2、第二步-解压-使用终端解压上传的三个软件安装包"><a href="#3-2、第二步-解压-使用终端解压上传的三个软件安装包" class="headerlink" title="3.2、第二步-解压-使用终端解压上传的三个软件安装包"></a>3.2、第二步-解压-使用终端解压上传的三个软件安装包</h2><h3 id="3-2-1、先进入软件所在的目录"><a href="#3-2-1、先进入软件所在的目录" class="headerlink" title="3.2.1、先进入软件所在的目录"></a>3.2.1、先进入软件所在的目录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/local/src<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-3.2.1%E3%80%81%E8%BF%9B%E5%85%A5%E8%BD%AF%E4%BB%B6%E6%89%80%E5%9C%A8%E7%9A%84%E7%9B%AE%E5%BD%95.png"></p><h3 id="3-2-2、解压软件安装包"><a href="#3-2-2、解压软件安装包" class="headerlink" title="3.2.2、解压软件安装包"></a>3.2.2、解压软件安装包</h3><p><strong>Linux解压命令简介：</strong></p><p>unzip</p><p>unzip是解压缩文件命令，对应于zip压缩命令，unzip 是专门对zip压缩的文件进行解压缩的，其语法格式如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">unzip</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span>  <span class="token punctuation">[</span>路径<span class="token punctuation">]</span>   filename.zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>常用参数选项如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">-d ：解压文件到指定目录中去-t：检查压缩文件是否正确-l：仅查看压缩文件包里的内容-q：静默模式，即解压时不显示详细解压过程<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>演示示例：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">unzip</span> -t  ziptext.zip<span class="token comment">#检查压缩文件是否正确</span><span class="token function">unzip</span> -l  ziptext.zip<span class="token comment">#查看列出压缩文件里的内容</span><span class="token function">unzip</span>  ziptext.zip<span class="token comment">#解压文件到当前目录</span><span class="token function">unzip</span> -d /test/ ziptext.zip<span class="token comment">#解压文件到自定的目录</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-3.2.2%E3%80%81%E8%A7%A3%E5%8E%8B%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%8C%85.png"></p><h2 id="3-3、安装-先安装libfastcommon-master"><a href="#3-3、安装-先安装libfastcommon-master" class="headerlink" title="3.3、安装-先安装libfastcommon-master"></a>3.3、安装-先安装libfastcommon-master</h2><h3 id="3-3-1、第一步先进入解压后的libfastcommon-master目录"><a href="#3-3-1、第一步先进入解压后的libfastcommon-master目录" class="headerlink" title="3.3.1、第一步先进入解压后的libfastcommon-master目录"></a>3.3.1、第一步先进入解压后的libfastcommon-master目录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@aliyun src<span class="token punctuation">]</span><span class="token comment"># cd libfastcommon-master</span><span class="token punctuation">[</span>root@aliyun libfastcommon-master<span class="token punctuation">]</span><span class="token comment"># ll</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-3-2、编译"><a href="#3-3-2、编译" class="headerlink" title="3.3.2、编译"></a>3.3.2、编译</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@aliyun libfastcommon-master<span class="token punctuation">]</span><span class="token comment"># ./make.sh</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-3.3%E3%80%81%E7%BC%96%E8%AF%91libfastcommon-master.png"></p><h3 id="3-3-3、安装"><a href="#3-3-3、安装" class="headerlink" title="3.3.3、安装"></a>3.3.3、安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@aliyun libfastcommon-master<span class="token punctuation">]</span><span class="token comment"># ./make.sh install</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-3.3%E3%80%81%E5%AE%89%E8%A3%85libfastcommon-master.png"></p><h3 id="3-3-4、拷贝"><a href="#3-3-4、拷贝" class="headerlink" title="3.3.4、拷贝"></a>3.3.4、拷贝</h3><p>拷贝/usr/lib64/libfastcommon.so到/usr/lib中</p><p>这里可以直接使用宝塔面板拷贝</p><h2 id="3-4、安装-FastDFS"><a href="#3-4、安装-FastDFS" class="headerlink" title="3.4、安装-FastDFS"></a>3.4、安装-FastDFS</h2><h3 id="3-4-1、进入FastDFS解压后的目录中"><a href="#3-4-1、进入FastDFS解压后的目录中" class="headerlink" title="3.4.1、进入FastDFS解压后的目录中"></a>3.4.1、进入FastDFS解压后的目录中</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@aliyun src<span class="token punctuation">]</span><span class="token comment"># cd FastDFS</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-4-2、编译"><a href="#3-4-2、编译" class="headerlink" title="3.4.2、编译"></a>3.4.2、编译</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@aliyun FastDFS<span class="token punctuation">]</span><span class="token comment"># ll</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-3.4%E3%80%81%E5%AE%89%E8%A3%85FastDFS-%E7%BC%96%E8%AF%91.png"></p><h3 id="3-4-3、安装"><a href="#3-4-3、安装" class="headerlink" title="3.4.3、安装"></a>3.4.3、安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@aliyun FastDFS<span class="token punctuation">]</span><span class="token comment"># ./make.sh install</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-3.4.3%E3%80%81%E5%AE%89%E8%A3%85FastDFS.png"></p><h3 id="3-4-4、拷贝相关文件"><a href="#3-4-4、拷贝相关文件" class="headerlink" title="3.4.4、拷贝相关文件"></a>3.4.4、拷贝相关文件</h3><p>安装成功后将安装目录下的conf文件夹（/usr/local/src/FastDFS/conf）中的所有文件拷贝到/etc/fdfs目录中。—这一步我们也用宝塔面板复制。</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-3.4.4%E3%80%81%E6%8B%B7%E8%B4%9D%E6%96%87%E4%BB%B6.png"></p><p>粘贴到/etc/fdfs</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-3.4.4%E3%80%81%E7%B2%98%E8%B4%B4%E6%96%87%E4%BB%B6.png"></p><h2 id="3-5、安装Tracker服务"><a href="#3-5、安装Tracker服务" class="headerlink" title="3.5、安装Tracker服务"></a>3.5、安装Tracker服务</h2><h3 id="3-5-1、配置tracker服务–修改-etc-fdfs-tracker-conf文件"><a href="#3-5-1、配置tracker服务–修改-etc-fdfs-tracker-conf文件" class="headerlink" title="3.5.1、配置tracker服务–修改/etc/fdfs/tracker.conf文件"></a>3.5.1、配置tracker服务–修改/etc/fdfs/tracker.conf文件</h3><p>这里我们先新建一个存储路径（文件夹）。创建tracker基础数据目录，即base_path对应的目录</p><p>建议使用终端命令方式建立文件夹</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@aliyun conf<span class="token punctuation">]</span><span class="token comment"># mkdir -p /fastdfs/tracker</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>创建完成–进入宝塔面板修改/etc/fdfs/tracker.conf配置文件</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-3.5.1%E3%80%81%E4%BF%AE%E6%94%B9tracker.conf%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png"></p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-%E4%BF%AE%E6%94%B9tracker.conf%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png"></p><h3 id="3-5-2、启动tracker服务"><a href="#3-5-2、启动tracker服务" class="headerlink" title="3.5.2、启动tracker服务"></a>3.5.2、启动tracker服务</h3><p><strong>注意：</strong>一定要在启动tracker服务前开放22122端口号。。一定要开，这里我们直接在宝塔面板-安全，里面打开端口。同时去阿里云或腾讯云也打开22122端口。<strong>非常重要</strong></p><p>宝塔面板开放22122端口</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-3.5.2%E3%80%81%E5%BC%80%E6%94%BE%E7%AB%AF%E5%8F%A322122.png"></p><p>启动Tracker服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@aliyun conf<span class="token punctuation">]</span><span class="token comment"># /usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看Tracker是否启动成功</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-3.5.2%E3%80%81%E6%9F%A5%E7%9C%8BTracker%E6%98%AF%E5%90%A6%E5%90%AF%E5%8A%A8%E6%88%90%E5%8A%9F.png"></p><p>重启Tracker服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@aliyun conf<span class="token punctuation">]</span><span class="token comment"># /usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf restart</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-6、安装Storage服务"><a href="#3-6、安装Storage服务" class="headerlink" title="3.6、安装Storage服务"></a>3.6、安装Storage服务</h2><h3 id="3-6-1、配置storage服务–修改-etc-fdfs-storage-conf文件"><a href="#3-6-1、配置storage服务–修改-etc-fdfs-storage-conf文件" class="headerlink" title="3.6.1、配置storage服务–修改/etc/fdfs/storage.conf文件"></a>3.6.1、配置storage服务–修改/etc/fdfs/storage.conf文件</h3><p>这里我们先新建一个存储路径（文件夹）。创建storager基础数据目录，即base_path对应的目录</p><p>建议使用终端命令方式建立文件夹</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@aliyun conf<span class="token punctuation">]</span><span class="token comment"># mkdir -p /fastdfs/storage/base</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>创建完成–进入宝塔面板修改/etc/fdfs/storage.conf配置文件</p><p>需要修改的地方有3处</p><pre class="line-numbers language-none"><code class="language-none"># is this config file disabled# false for enabled# true for disableddisabled=false# the name of the group this storage server belongs to## comment or remove this item for fetching from tracker server,# in this case, use_storage_id must set to true in tracker.conf,# and storage_ids.conf must be configed correctly.group_name=group1# bind an address of this host# empty for bind all addresses of this hostbind_addr=# if bind an address of this host when connect to other servers # (this storage server as a client)# true for binding the address configed by above parameter: "bind_addr"# false for binding any address of this hostclient_bind=true# the storage server portport=23000# connect timeout in seconds# default value is 30sconnect_timeout=30# network timeout in seconds# default value is 30snetwork_timeout=60# heart beat interval in secondsheart_beat_interval=30# disk usage report interval in secondsstat_report_interval=60# the base path to store data and log filesbase_path=/fastdfs/storage/base                              -----------------第一处修改处------------------# max concurrent connections the server supported# default value is 256# more max_connections means more memory will be usedmax_connections=256# the buff size to recv / send data# this parameter must more than 8KB# default value is 64KB# since V2.00buff_size = 256KB# accept thread count# default value is 1# since V4.07accept_threads=1# work thread count, should &lt;= max_connections# work thread deal network io# default value is 4# since V2.00work_threads=4# if disk read / write separated##  false for mixed read and write##  true for separated read and write# default value is true# since V2.00disk_rw_separated = true# disk reader thread count per store base path# for mixed read / write, this parameter can be 0# default value is 1# since V2.00disk_reader_threads = 1# disk writer thread count per store base path# for mixed read / write, this parameter can be 0# default value is 1# since V2.00disk_writer_threads = 1# when no entry to sync, try read binlog again after X milliseconds# must &gt; 0, default value is 200mssync_wait_msec=50# after sync a file, usleep milliseconds# 0 for sync successively (never call usleep)sync_interval=0# storage sync start time of a day, time format: Hour:Minute# Hour from 0 to 23, Minute from 0 to 59sync_start_time=00:00# storage sync end time of a day, time format: Hour:Minute# Hour from 0 to 23, Minute from 0 to 59sync_end_time=23:59# write to the mark file after sync N files# default value is 500write_mark_file_freq=500# path(disk or mount point) count, default value is 1store_path_count=1# store_path#, based 0, if store_path0 not exists, it's value is base_path# the paths must be existstore_path0=/fastdfs/storage                                ------------------第二处修改处------------------#store_path1=/home/yuqing/fastdfs2# subdir_count  * subdir_count directories will be auto created under each # store_path (disk), value can be 1 to 256, default value is 256subdir_count_per_path=256# tracker_server can ocur more than once, and tracker_server format is#  "host:port", host can be hostname or ip addresstracker_server=192.168.209.121:22122            ----------------第三处修改处--改为自己服务器的IP地址-------------#standard log level as syslog, case insensitive, value list:### emerg for emergency### alert### crit for critical### error### warn for warning### notice### info### debuglog_level=info#unix group name to run this program, #not set (empty) means run by the group of current userrun_by_group=#unix username to run this program,#not set (empty) means run by current userrun_by_user=# allow_hosts can ocur more than once, host can be hostname or ip address,# "*" (only one asterisk) means match all ip addresses# we can use CIDR ips like 192.168.5.64/26# and also use range like these: 10.0.1.[0-254] and host[01-08,20-25].domain.com# for example:# allow_hosts=10.0.1.[1-15,20]# allow_hosts=host[01-08,20-25].domain.com# allow_hosts=192.168.5.64/26allow_hosts=*# the mode of the files distributed to the data path# 0: round robin(default)# 1: random, distributted by hash codefile_distribute_path_mode=0# valid when file_distribute_to_path is set to 0 (round robin), # when the written file count reaches this number, then rotate to next path# default value is 100file_distribute_rotate_count=100# call fsync to disk when write big file# 0: never call fsync# other: call fsync when written bytes &gt;= this bytes# default value is 0 (never call fsync)fsync_after_written_bytes=0# sync log buff to disk every interval seconds# must &gt; 0, default value is 10 secondssync_log_buff_interval=10# sync binlog buff / cache to disk every interval seconds# default value is 60 secondssync_binlog_buff_interval=10# sync storage stat info to disk every interval seconds# default value is 300 secondssync_stat_file_interval=300# thread stack size, should &gt;= 512KB# default value is 512KBthread_stack_size=512KB# the priority as a source server for uploading file.# the lower this value, the higher its uploading priority.# default value is 10upload_priority=10# the NIC alias prefix, such as eth in Linux, you can see it by ifconfig -a# multi aliases split by comma. empty value means auto set by OS type# default values is emptyif_alias_prefix=# if check file duplicate, when set to true, use FastDHT to store file indexes# 1 or yes: need check# 0 or no: do not check# default value is 0check_file_duplicate=0# file signature method for check file duplicate## hash: four 32 bits hash code## md5: MD5 signature# default value is hash# since V4.01file_signature_method=hash# namespace for storing file indexes (key-value pairs)# this item must be set when check_file_duplicate is true / onkey_namespace=FastDFS# set keep_alive to 1 to enable persistent connection with FastDHT servers# default value is 0 (short connection)keep_alive=0# you can use "#include filename" (not include double quotes) directive to # load FastDHT server list, when the filename is a relative path such as # pure filename, the base path is the base path of current/this config file.# must set FastDHT server list when check_file_duplicate is true / on# please see INSTALL of FastDHT for detail##include /home/yuqing/fastdht/conf/fdht_servers.conf# if log to access log# default value is false# since V4.00use_access_log = false# if rotate the access log every day# default value is false# since V4.00rotate_access_log = false# rotate access log time base, time format: Hour:Minute# Hour from 0 to 23, Minute from 0 to 59# default value is 00:00# since V4.00access_log_rotate_time=00:00# if rotate the error log every day# default value is false# since V4.02rotate_error_log = false# rotate error log time base, time format: Hour:Minute# Hour from 0 to 23, Minute from 0 to 59# default value is 00:00# since V4.02error_log_rotate_time=00:00# rotate access log when the log file exceeds this size# 0 means never rotates log file by log file size# default value is 0# since V4.02rotate_access_log_size = 0# rotate error log when the log file exceeds this size# 0 means never rotates log file by log file size# default value is 0# since V4.02rotate_error_log_size = 0# keep days of the log files# 0 means do not delete old log files# default value is 0log_file_keep_days = 0# if skip the invalid record when sync file# default value is false# since V4.02file_sync_skip_invalid_record=false# if use connection pool# default value is false# since V4.05use_connection_pool = false# connections whose the idle time exceeds this time will be closed# unit: second# default value is 3600# since V4.05connection_pool_max_idle_time = 3600# use the ip address of this storage server if domain_name is empty,# else this domain name will ocur in the url redirected by the tracker serverhttp.domain_name=# the port of the web server on this storage serverhttp.server_port=8888<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-6-2、启动storage服务"><a href="#3-6-2、启动storage服务" class="headerlink" title="3.6.2、启动storage服务"></a>3.6.2、启动storage服务</h3><p><strong>注意：</strong>一定要在启动storage服务前开放23000端口号。。一定要开，这里我们直接在宝塔面板-安全，里面打开端口。同时去阿里云或腾讯云也打开23000端口。<strong>非常重要</strong></p><p>宝塔面板开放23000端口</p><p>同22122开放端口方法一模一样</p><p>启动storage服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@aliyun conf<span class="token punctuation">]</span><span class="token comment"># /usr/bin/fdfs_storaged /etc/fdfs/storage.conf</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看storage服务是否启动成功</p><p>去刚才创建的/fastdfs/storage目录中查看是否有新目录生成–会发现在/fastdfs/storage目录中有一个data目录生成，在data目录中还有很多子目录。说明storage启动成功</p><p>重启storage服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@aliyun conf<span class="token punctuation">]</span><span class="token comment"># /usr/bin/fdfs_storaged /etc/fdfs/storage.conf restart</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-7、配置客户端"><a href="#3-7、配置客户端" class="headerlink" title="3.7、配置客户端"></a>3.7、配置客户端</h2><h3 id="3-7-1、将-usr-local-src-FastDFS-client里面的libfdfsclient-so拷贝到-usr-lib目录中"><a href="#3-7-1、将-usr-local-src-FastDFS-client里面的libfdfsclient-so拷贝到-usr-lib目录中" class="headerlink" title="3.7.1、将/usr/local/src/FastDFS/client里面的libfdfsclient.so拷贝到/usr/lib目录中"></a>3.7.1、将/usr/local/src/FastDFS/client里面的libfdfsclient.so拷贝到/usr/lib目录中</h3><p>这里我们使用宝塔面板进行拷贝粘贴–简单、方便</p><h3 id="3-7-2、创建一个目录"><a href="#3-7-2、创建一个目录" class="headerlink" title="3.7.2、创建一个目录"></a>3.7.2、创建一个目录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@aliyun conf<span class="token punctuation">]</span><span class="token comment"># mkdir -p /fastdfs/client</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-7-3、修改-etc-fdfs-client-conf配置文件"><a href="#3-7-3、修改-etc-fdfs-client-conf配置文件" class="headerlink" title="3.7.3、修改/etc/fdfs/client.conf配置文件"></a>3.7.3、修改/etc/fdfs/client.conf配置文件</h3><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-3.7%E3%80%81%E9%85%8D%E7%BD%AE%E5%AE%A2%E6%88%B7%E7%AB%AF-%E4%BF%AE%E6%94%B9client%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png"></p><h2 id="3-8、测试上传服务是否成功"><a href="#3-8、测试上传服务是否成功" class="headerlink" title="3.8、测试上传服务是否成功"></a>3.8、测试上传服务是否成功</h2><h2 id="3-8-1、使用vim写一个html文件-内容随便写（这里做测试用，不需要内容）"><a href="#3-8-1、使用vim写一个html文件-内容随便写（这里做测试用，不需要内容）" class="headerlink" title="3.8.1、使用vim写一个html文件-内容随便写（这里做测试用，不需要内容）"></a>3.8.1、使用vim写一个html文件-内容随便写（这里做测试用，不需要内容）</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /root/hi.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上传hi.html文件命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@aliyun conf<span class="token punctuation">]</span><span class="token comment"># /usr/bin/fdfs_test /etc/fdfs/client.conf upload /root/hi.html</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上传成功截图展示：</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-3.8%E3%80%81%E6%B5%8B%E8%AF%95%E4%B8%8A%E4%BC%A0%E6%9C%8D%E5%8A%A13.8.png"></p><h2 id="3-9、问题引入"><a href="#3-9、问题引入" class="headerlink" title="3.9、问题引入"></a>3.9、问题引入</h2><p>经过上面的步骤，我们已经完成了FastDFS的上传服务，但是现在外部是无法通过链接的形式对我们上传的内容进行访问的，这时我们可以安装个插件来访问上传的内容。</p><p>如何让FastDFS具备http访问的能力？？？</p><p>我们可以使用nginx来让FastDFS具备http访问的能力</p><p>我们此时需要一个中间插件（fastdfs-nginx-module）来建立nginx和FastDFS之间的关系</p><h2 id="3-10、安装nginx"><a href="#3-10、安装nginx" class="headerlink" title="3.10、安装nginx"></a>3.10、安装nginx</h2><p>这里我们不需要自己安装，安装宝塔面板的第一步已经安装好了nginx</p><h2 id="3-11、安装fastdfs-nginx-module插件"><a href="#3-11、安装fastdfs-nginx-module插件" class="headerlink" title="3.11、安装fastdfs-nginx-module插件"></a>3.11、安装fastdfs-nginx-module插件</h2><p>进入解压后的fastdfs-nginx-module插件目录–前面已经解压过了。在/usr/local/src/目录中。</p><p>修改/usr/local/src/fastdfs-nginx-module/src/config文件，把其中的/local去掉。</p><p>这里我们还是使用宝塔面板修改文件。</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS--3.11%E3%80%81%E5%AE%89%E8%A3%85fastdfs-nginx-module%E6%8F%92%E4%BB%B6.png"></p><p>3、把/usr/local/src/fastdfs-nginx-module/src目录下的mod_fastdfs.conf文件复制到/etc/fdfs目录中，并编辑该文件–这两步我们都使用宝塔面板完成。</p><p>需要修改的地方如下：</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-fastdfs-nginx-module%E6%8F%92%E4%BB%B6%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BF%AE%E6%94%B9.png"></p><p>到这里我们的插件安装成功了</p><h2 id="3-12、把fastdfs-nginx-module插件安装到nginx中"><a href="#3-12、把fastdfs-nginx-module插件安装到nginx中" class="headerlink" title="3.12、把fastdfs-nginx-module插件安装到nginx中"></a>3.12、把fastdfs-nginx-module插件安装到nginx中</h2><p>我们先把宝塔面板安装的nginx卸载掉，然后重新用面板安装nginx，这样做的目的是在用宝塔安装nginx的时候，我们同时加入插件fastdfs-nginx-module</p><p>1、用宝塔面板卸载nginx软件</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-3.12%E3%80%81%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E5%8D%B8%E8%BD%BDnginx.png"></p><p>2、使用宝塔面板安装nginx–同时加入fastdfs-nginx-module插件模块</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-%E5%AE%89%E8%A3%85nginx1.png"></p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-%E5%AE%89%E8%A3%85nginx2.png"></p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-%E5%AE%89%E8%A3%85nginx3.png"></p><p>3、安装完成–配置nginx.conf配置文件</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-%E4%BF%AE%E6%94%B9nginx.conf%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8A%A0%E5%85%A5fastdfs-nginx-module%E6%A8%A1%E5%9D%97.png"></p><h2 id="4、最终测试"><a href="#4、最终测试" class="headerlink" title="4、最终测试"></a>4、最终测试</h2><p>之前测试上传的hi.html文件现在就可以访问到了</p><p>看图说话：</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAFastDFS-%E6%9C%80%E7%BB%88%E6%88%90%E5%8A%9F%E6%B5%8B%E8%AF%95.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 软件教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java反射</title>
      <link href="/2020/12/12/java-fan-she/"/>
      <url>/2020/12/12/java-fan-she/</url>
      
        <content type="html"><![CDATA[<h1 id="反射概述"><a href="#反射概述" class="headerlink" title="反射概述"></a>反射概述</h1><p>反射是指对于任何一个Class类，在<code>运行的时候</code>都可以直接得到这个类的全部成分。</p><p>在运行时，可以直接得到这个类的构造器对象：Constructor</p>]]></content>
      
      
      
        <tags>
            
            <tag> Java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将本地Hexo博客同时部署到自己的服务器、GitHub和码云Gitee等多个平台</title>
      <link href="/2020/12/10/ru-he-jiang-ben-di-hexo-bo-ke-tong-shi-tui-song-dao-duo-ge-ping-tai/"/>
      <url>/2020/12/10/ru-he-jiang-ben-di-hexo-bo-ke-tong-shi-tui-song-dao-duo-ge-ping-tai/</url>
      
        <content type="html"><![CDATA[<h1 id="如何将自己本地的Hexo博客同时部署到自己的服务器、GitHub和码云Gitee等多个平台？？"><a href="#如何将自己本地的Hexo博客同时部署到自己的服务器、GitHub和码云Gitee等多个平台？？" class="headerlink" title="如何将自己本地的Hexo博客同时部署到自己的服务器、GitHub和码云Gitee等多个平台？？"></a>如何将自己本地的Hexo博客同时部署到自己的服务器、GitHub和码云Gitee等多个平台？？</h1><p>解决：只需要修改hexo根目录下的<code>_config.yml</code>配置文件即可。(不是主题目录下的<code>_config.yml</code>配置文件)</p><p>修改地方：</p><p>找到<code>_config.yml</code>配置文件中的deploy处，改为如下形式即可：</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">deploy:  - type: git    repo: git@github.com:1024study/1024study.github.io.git    branch: main  - type: git    repo: git@这里填写自己服务器的IP地址:/home/git/hexo.git #这后面的仓库地址，也要根据自己服务器的实际位置填写。    branch: master  - type: git    repo: https://gitee.com/space1024/space1024.git    branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意点</strong>：</p><p>1、这里的type前面一定要有一个<code>-</code>符号。一定要按照上面的格式写，该有空格的地方，该有<code>-</code>的地方要注意添加。</p><p>2、这里GitHub的仓库地址（repo项），建议写ssh地址，不要写https那个地址，https可能会上传失败。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo博客相关 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>悟空M1空气检测仪联网方法</title>
      <link href="/2020/12/10/wu-kong-m1-kong-qi-jian-ce-yi-lian-wang-fang-fa/"/>
      <url>/2020/12/10/wu-kong-m1-kong-qi-jian-ce-yi-lian-wang-fang-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="1、第一步：重置机器"><a href="#1、第一步：重置机器" class="headerlink" title="1、第一步：重置机器"></a>1、第一步：重置机器</h1><p>长按右侧按钮（大约15秒左右）WiFi灯快速闪烁</p><h1 id="2、第二步：连接机器WiFi"><a href="#2、第二步：连接机器WiFi" class="headerlink" title="2、第二步：连接机器WiFi"></a>2、第二步：连接机器WiFi</h1><p>手机连接WiFi（easylink…..）。只有长按右侧按钮后才会出现此WiFi</p><h1 id="3、第三步：连接路由器WiFi"><a href="#3、第三步：连接路由器WiFi" class="headerlink" title="3、第三步：连接路由器WiFi"></a>3、第三步：连接路由器WiFi</h1><p>打开easylink软件，输入路由器的WiFi名称，密码。(必须是2.4G频段的WiFi)。easylink软件会闪退，联网完成，时间已校准。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 软件教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo加Gitee搭建个人博客</title>
      <link href="/2020/12/08/hexo-jia-gitee-da-jian-ge-ren-bo-ke/"/>
      <url>/2020/12/08/hexo-jia-gitee-da-jian-ge-ren-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo加Gitee搭建个人博客"><a href="#hexo加Gitee搭建个人博客" class="headerlink" title="hexo加Gitee搭建个人博客"></a>hexo加Gitee搭建个人博客</h1><h1 id="1、本地环境搭建"><a href="#1、本地环境搭建" class="headerlink" title="1、本地环境搭建"></a>1、本地环境搭建</h1><h2 id="1-1、安装软件"><a href="#1-1、安装软件" class="headerlink" title="1.1、安装软件"></a>1.1、安装软件</h2><p>nodejs</p><p>git</p><h2 id="1-2、检查环境是否安装完成"><a href="#1-2、检查环境是否安装完成" class="headerlink" title="1.2、检查环境是否安装完成"></a>1.2、检查环境是否安装完成</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">node -vC:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span><span class="token number">1045</span><span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>node -vv14.17.6 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> -vC:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span><span class="token number">1045</span><span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>npm -v<span class="token number">6.14</span>.15<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> --versionC:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span><span class="token number">1045</span><span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>git --version<span class="token function">git</span> version <span class="token number">2.34</span>.1.windows.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-3、安装node-js淘宝镜像加速-cnpm"><a href="#1-3、安装node-js淘宝镜像加速-cnpm" class="headerlink" title="1.3、安装node.js淘宝镜像加速(cnpm)"></a>1.3、安装node.js淘宝镜像加速(cnpm)</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="2、安装本地hexo博客"><a href="#2、安装本地hexo博客" class="headerlink" title="2、安装本地hexo博客"></a>2、安装本地hexo博客</h1><h2 id="2-1、搭建本地博客框架"><a href="#2-1、搭建本地博客框架" class="headerlink" title="2.1、搭建本地博客框架"></a>2.1、搭建本地博客框架</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-2、搭建本地博客"><a href="#2-2、搭建本地博客" class="headerlink" title="2.2、搭建本地博客"></a>2.2、搭建本地博客</h2><p>在本地磁盘指定位置打开cmd窗口，输入以下命令，创建一个博客</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init 博客文件夹名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-3、启动本地博客"><a href="#2-3、启动本地博客" class="headerlink" title="2.3、启动本地博客"></a>2.3、启动本地博客</h2><p>创建成功后先进入博客文件夹中，然后输入命令启动博客</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> 博客文件夹名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装依赖</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动博客</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="2、搭建到码云Gitee上"><a href="#2、搭建到码云Gitee上" class="headerlink" title="2、搭建到码云Gitee上"></a>2、搭建到码云Gitee上</h1><h2 id="2-1、新建仓库"><a href="#2-1、新建仓库" class="headerlink" title="2.1、新建仓库"></a>2.1、新建仓库</h2><h2 id="2-2、配置Git"><a href="#2-2、配置Git" class="headerlink" title="2.2、配置Git"></a>2.2、配置Git</h2><p>Git 全局设置:</p><p>如果之前配置过，这里就不需要在配置，全局配置一次即可。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"1024study"</span><span class="token function">git</span> config --global user.email <span class="token string">"10459079@qq.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2-3、生成本地秘钥"><a href="#2-3、生成本地秘钥" class="headerlink" title="2.3、生成本地秘钥"></a>2.3、生成本地秘钥</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"邮箱"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-4、添加本地公钥到码云账号中"><a href="#2-4、添加本地公钥到码云账号中" class="headerlink" title="2.4、添加本地公钥到码云账号中"></a>2.4、添加本地公钥到码云账号中</h2><p>本地公钥位置：<code>C:\Users\你的用户名\.ssh</code>目录中</p><p>复制<code>id_rsa.pub</code>到码云账号中。</p><h2 id="2-5、填入公钥到码云Gitee中"><a href="#2-5、填入公钥到码云Gitee中" class="headerlink" title="2.5、填入公钥到码云Gitee中"></a>2.5、填入公钥到码云Gitee中</h2><p>设置-ssh公钥–填入</p><h2 id="2-6、测试是否成功连接到Gitee"><a href="#2-6、测试是否成功连接到Gitee" class="headerlink" title="2.6、测试是否成功连接到Gitee"></a>2.6、测试是否成功连接到Gitee</h2><p>本地计算机输入下面命令，查看是否连接成功</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> -T git@gitee.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>连接成功：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">ssh</span> -T git@gitee.comHi 1024study<span class="token operator">!</span> You've successfully authenticated, but GITEE.COM does not provide shell access.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="3、本地博客推送到码云"><a href="#3、本地博客推送到码云" class="headerlink" title="3、本地博客推送到码云"></a>3、本地博客推送到码云</h1><h2 id="3-1、安装推送插件"><a href="#3-1、安装推送插件" class="headerlink" title="3.1、安装推送插件"></a>3.1、安装推送插件</h2><p>在博客目录下安装<code>hexo-deployer-git</code></p><p>这一步非常重要，如果不安装就不可以将本地博客推送到码云</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-2、修改hexo博客的配置文件"><a href="#3-2、修改hexo博客的配置文件" class="headerlink" title="3.2、修改hexo博客的配置文件"></a>3.2、修改hexo博客的配置文件</h2><p>修改hexo工程目录下的配置文件<code>_config.yml</code>在文件的最下面，找到<code>deploy</code>字段，配置成如下形式：</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">deploy:  type: git  repo: git@gitee.com:space1024/space1024.git  #自己的创建的仓库的地址  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> Gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XMind破解</title>
      <link href="/2020/12/07/xmind-po-jie-jiao-cheng/"/>
      <url>/2020/12/07/xmind-po-jie-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.52pojie.cn/forum.php?mod=viewthread&amp;tid=1541079&amp;highlight=xmind">吾爱破解-XMind破解帖子</a></p><p><strong>激活方法</strong></p><p>右击软件，打开文件所在的位置（默认路径:C:\Program Files\XMind）<br>将app.asar文件复制到resources路径下，替换目标中的文件即可激活。</p><p>注意：不能更新新版本的XMind，更新后软件激活就失败了。</p><p>破解文件-百度网盘-软件目录中</p>]]></content>
      
      
      
        <tags>
            
            <tag> 软件教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PicGo</title>
      <link href="/2020/12/07/picgo-gitee-da-jian-si-ren-tu-chuang/"/>
      <url>/2020/12/07/picgo-gitee-da-jian-si-ren-tu-chuang/</url>
      
        <content type="html"><![CDATA[<h1 id="一、创建一个Gitee仓库"><a href="#一、创建一个Gitee仓库" class="headerlink" title="一、创建一个Gitee仓库"></a>一、创建一个Gitee仓库</h1><h2 id="1-1、新建仓库"><a href="#1-1、新建仓库" class="headerlink" title="1.1、新建仓库"></a>1.1、新建仓库</h2><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/1.1%E3%80%81Gitee%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93.png"></p><h2 id="1-2、初始化仓库的README-md文件"><a href="#1-2、初始化仓库的README-md文件" class="headerlink" title="1.2、初始化仓库的README.md文件"></a>1.2、初始化仓库的README.md文件</h2><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/1.2%E3%80%81%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BB%93%E5%BA%93%E7%9A%84README.md%E6%96%87%E4%BB%B6.png"></p><h1 id="二、申请私人令牌"><a href="#二、申请私人令牌" class="headerlink" title="二、申请私人令牌"></a>二、申请私人令牌</h1><h2 id="2-1、进入Gitee设置"><a href="#2-1、进入Gitee设置" class="headerlink" title="2.1、进入Gitee设置"></a>2.1、进入Gitee设置</h2><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/2.1%E3%80%81%E8%BF%9B%E5%85%A5Gitee%E8%AE%BE%E7%BD%AE.png"></p><h2 id="2-2、开始创建私人令牌"><a href="#2-2、开始创建私人令牌" class="headerlink" title="2.2、开始创建私人令牌"></a>2.2、开始创建私人令牌</h2><p>步骤一、</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/2.2%E3%80%81%E5%88%9B%E5%BB%BA%E7%A7%81%E4%BA%BA%E4%BB%A4%E7%89%8C1.png"></p><p>步骤二、</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/2.2%E3%80%81%E5%88%9B%E5%BB%BA%E7%A7%81%E4%BA%BA%E4%BB%A4%E7%89%8C2.png"></p><p>令牌生成成功</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/2.2%E3%80%81%E4%BB%A4%E7%89%8C%E7%94%9F%E6%88%90%E6%88%90%E5%8A%9F.png"></p><p><strong>注意：</strong>一定要把生成的令牌复制保存到记事本</p><p>令牌：06d0fc12558b014b41a04b177eb9e6dc</p><h1 id="三、下载–安装–使用PicGo"><a href="#三、下载–安装–使用PicGo" class="headerlink" title="三、下载–安装–使用PicGo"></a>三、下载–安装–使用PicGo</h1><p>所谓图床工具，就是自动把本地图片转换成链接的一款工具，网络上有很多图床工具，就目前使用种类而言，PicGo 算得上一款比较优秀的图床工具。它是一款用 <code>Electron-vue</code> 开发的软件，可以支持微博，七牛云，腾讯云COS，又拍云，GitHub，阿里云OSS，SM.MS，imgur 等8种常用图床，功能强大，简单易用。</p><h2 id="3-1、下载图床工具PicGo"><a href="#3-1、下载图床工具PicGo" class="headerlink" title="3.1、下载图床工具PicGo"></a>3.1、下载图床工具PicGo</h2><p><a href="https://picgo.github.io/PicGo-Doc/">PicGo官方文档</a></p><p><a href="https://github.com/Molunerfinn/PicGo/releases">PicGo工具下载地址-github</a></p><p>注意：<em>mac</em> 系统选择 <em>dmg</em> 下载，<em>windwos</em> 选择 <em>.exe</em>系统，如果不是下载安装包，想看源码的话，可以选择 <code>git clone https://github.com/Molunerfinn/PicGo.git</code> 克隆到本地</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/3.1%E3%80%81%E4%B8%8B%E8%BD%BD%E5%9B%BE%E5%BA%8A%E5%B7%A5%E5%85%B7PicGo.png"></p><p>PicGo官网</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/3.1%E3%80%81PicGo%E5%AE%98%E7%BD%91.png"></p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/3.1%E3%80%81PicGo%E7%89%88%E6%9C%AC%E5%88%97%E8%A1%A8.png"></p><h2 id="3-2安装PicGo"><a href="#3-2安装PicGo" class="headerlink" title="3.2安装PicGo"></a>3.2安装PicGo</h2><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/3.2%E3%80%81%E5%AE%89%E8%A3%85PicGo.png"></p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/3.2%E3%80%81%E5%AE%89%E8%A3%85PicGo2.png"></p><p>软件安装完毕</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/3.2%E3%80%81PicGo%E5%AE%89%E8%A3%85%E5%AE%8C%E6%88%90.png"></p><p>选择显示的图床</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/3.2%E3%80%81PicGo%E4%B8%AD%E9%80%89%E6%8B%A9%E9%9C%80%E8%A6%81%E6%98%BE%E7%A4%BA%E7%9A%84%E5%9B%BE%E5%BA%8A.png"></p><h2 id="3-3、PicGo安装Gitee图床"><a href="#3-3、PicGo安装Gitee图床" class="headerlink" title="3.3、PicGo安装Gitee图床"></a>3.3、PicGo安装Gitee图床</h2><p>软件本身是没有Gitee图床的，需要我们在插件库中自己安装Gitee插件</p><p><strong>注意</strong></p><p>必须安装<a href="https://nodejs.org/en/">Node.js</a>之后才能安装PicGo的插件，因为PicGo要使用<code>npm</code>来安装插件。</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/3.3%E3%80%81PicGo%E4%B8%AD%E5%AE%89%E8%A3%85Gitee%E5%9B%BE%E5%BA%8A.png"></p><p>成功加入Gitee图床</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/3.3%E3%80%81%E6%88%90%E5%8A%9F%E5%AE%89%E8%A3%85Gitee%E5%9B%BE%E5%BA%8A%E6%88%AA%E5%9B%BE.png"></p><h2 id="3-3、配置Gitee图床"><a href="#3-3、配置Gitee图床" class="headerlink" title="3.3、配置Gitee图床"></a>3.3、配置Gitee图床</h2><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/3.3%E3%80%81%E9%85%8D%E7%BD%AEGitee%E5%9B%BE%E5%BA%8A.png"></p><h2 id="3-4、上传一张图片测试"><a href="#3-4、上传一张图片测试" class="headerlink" title="3.4、上传一张图片测试"></a>3.4、上传一张图片测试</h2><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/3.4%E3%80%81PicGo%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E8%87%B3Gitee%E6%B5%8B%E8%AF%95.png"></p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/3.4%E3%80%81%E4%B8%8A%E4%BC%A0%E6%B5%8B%E8%AF%95%E6%88%90%E5%8A%9F.png"></p><h2 id="3-5、Gitee仓库中查看上传结果"><a href="#3-5、Gitee仓库中查看上传结果" class="headerlink" title="3.5、Gitee仓库中查看上传结果"></a>3.5、Gitee仓库中查看上传结果</h2><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/3.5%E3%80%81Gitee%E4%BB%93%E5%BA%93%E4%B8%AD%E6%9F%A5%E7%9C%8B%E4%B8%8A%E4%BC%A0%E7%BB%93%E6%9E%9C.png"></p><h2 id="3-6、上传前重命名设置"><a href="#3-6、上传前重命名设置" class="headerlink" title="3.6、上传前重命名设置"></a>3.6、上传前重命名设置</h2><p>之前上传的时候，文件名字是自动命名，我们可以在上传的时候手动修改文件名</p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/3.6%E3%80%81%E4%B8%8A%E4%BC%A0%E5%89%8D%E9%87%8D%E5%91%BD%E5%90%8D%E8%AE%BE%E7%BD%AE.png"></p><p><img src="https://gitee.com/space1024/image-bed/raw/master/images/HexoArticle/PicGo+Gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/3.6%E3%80%81%E4%B8%8A%E4%BC%A0%E5%89%8D%E9%87%8D%E5%91%BD%E5%90%8D%E8%AE%BE%E7%BD%AE2.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/12/01/hello-world/"/>
      <url>/2020/12/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
